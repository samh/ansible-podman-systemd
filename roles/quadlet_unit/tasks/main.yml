---
# tasks file for quadlet_unit

- name: "Configure quadlet service as {{ quadlet_unit_user }}"
  become: true
  become_user: "{{ quadlet_unit_user }}"
  tags: [quadlet service, podman, quadlet]
  block:
    - name: Check variables
      ansible.builtin.assert:
        that:
          - "quadlet_unit_name is defined"
          - "quadlet_unit_user is defined"

    - name: If dict config is specified, text should not be
      when: quadlet_unit_config
      ansible.builtin.assert:
        that: "quadlet_unit_text == ''"

    - name: If text config is specified, dict should not be
      when: quadlet_unit_text
      ansible.builtin.assert:
        that: "quadlet_unit_config == {}"

    - name: Create podman systemd directory (quadlet)
      ansible.builtin.file:
        path: "{{ quadlet_systemd_directory | expanduser }}"
        state: directory
        mode: 0700

    # TODO: not sure how to handle environment file yet.
    - name: Create environment file for quadlet service
      when: quadlet_environment
      ansible.builtin.template:
        src: "quadlet_unit.env.j2"
        dest: "{{ quadlet_environment_file }}"
        mode: 0600
      notify:
        - "Restart {{ quadlet_unit_name }}"

    - name: Create systemd service
      ansible.builtin.template:
        src: "{{ quadlet_unit_template }}"
        dest: "{{ quadlet_systemd_directory | expanduser }}/{{ quadlet_unit_name }}.{{ quadlet_unit_extension }}"
        mode: 0600
      notify:
        - Reload systemd user services
        - "Restart {{ quadlet_unit_name }}"

    - name: Flush handlers
      ansible.builtin.meta: flush_handlers

    # generated service should be automatically enabled;
    # see 'man podman-systemd.unit'
    - name: "Start service {{ quadlet_unit_name }}"
      when: "quadlet_unit_state"
      ansible.builtin.systemd:
        name: "{{ quadlet_unit_name }}"
        state: "{{ quadlet_unit_state }}"
        scope: user
      ignore_errors: "{{ ansible_check_mode }}"
